/* src/components/ProductCard/ProductCard.css */
/* CSS Variables (:root) should be defined globally in src/index.css */
/* @keyframes mini-spin can be global or local if only used here */

.product-card-item {
  background: #fff;
  border-radius: var(--border-radius-card); /* Ensure --border-radius-card is in index.css :root */
  box-shadow: var(--card-shadow); /* Ensure --card-shadow is in index.css :root */
  overflow: hidden;
  transition: transform 0.35s cubic-bezier(0.25, 0.46, 0.45, 0.94), box-shadow 0.35s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  display: flex;
  flex-direction: column;
  position: relative; /* For badges */
}

.product-card-item:hover {
  transform: translateY(-8px);
  box-shadow: var(--card-hover-shadow); /* Ensure --card-hover-shadow is in index.css :root */
}

.product-card-link {
  text-decoration: none;
  color: inherit;
  display: block; 
}

.product-image-wrapper {
  width: 100%;
  height: 280px; 
  overflow: hidden;
  position: relative; 
  background-color: #f9f9f9; 
  display: flex;
  align-items: center;
  justify-content: center;
}

.product-image-main {
  width: auto; 
  max-width: 80%; 
  height: auto; 
  max-height: 80%; 
  object-fit: contain;
  transition: transform 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.product-card-item:hover .product-image-main {
  transform: scale(1.1);
}

.product-card-overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.6) 0%, rgba(0, 0, 0, 0) 100%);
  padding: 15px;
  display: flex;
  justify-content: center;
  gap: 15px;
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
}

.product-card-item:hover .product-card-overlay {
  opacity: 1;
  transform: translateY(0);
}

.overlay-btn {
  background-color: rgba(255, 255, 255, 0.9);
  color: var(--primary-color);
  border: none;
  border-radius: 50%;
  width: 45px;
  height: 45px;
  font-size: 1.2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
  transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease;
}

.overlay-btn:hover {
  background-color: var(--primary-color);
  color: white;
  transform: scale(1.1);
}

.product-badge {
  position: absolute;
  top: 15px;
  left: 15px;
  background-color: var(--accent-color);
  color: white;
  padding: 5px 12px;
  font-size: 0.75rem;
  font-weight: bold;
  border-radius: 20px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  z-index: 1;
}
.product-badge.new { background-color: var(--secondary-color); }
.product-badge.sale { background-color: var(--success-color, #28a745); } /* Assuming --success-color is global */


.product-info {
  padding: 20px;
  text-align: left;
  flex-grow: 1; 
  display: flex;
  flex-direction: column;
  justify-content: space-between; 
}

.product-category-name {
  font-size: 0.8rem;
  color: #888; /* Or var(--dark-gray) if defined globally */
  margin-bottom: 5px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.product-name {
  font-size: 1.05rem; 
  font-weight: 600;
  color: var(--text-color);
  margin-bottom: 10px;
  line-height: 1.4;
  height: 44px; 
  overflow: hidden;
}
.product-title-link {
  text-decoration: none;
  color: inherit;
}
.product-title-link:hover .product-name {
  color: var(--primary-color);
}


.product-price-rating {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: auto; 
}

.product-price-tag {
  font-size: 1.35rem;
  font-weight: 700;
  color: var(--accent-color);
}

.product-rating-stars {
  display: flex;
  align-items: center;
  color: #f8c102; /* Gold for stars, or var(--star-filled-color) if defined globally */
}

.star-icon {
  margin-right: 2px;
  font-size: 0.9rem;
}

/* This was the potentially problematic line. Ensuring it's a valid comment or removed. */
/* .star-icon.empty { color: #e0e0e0; } */ /* Correctly commented out */

.rating-count {
  font-size: 0.8rem;
  color: #777; /* Or var(--dark-gray) */
  margin-left: 5px;
}

.overlay-btn.add-to-cart-btn-card { 
  /* Specific styles can go here if needed, otherwise inherits from .overlay-btn */
}

.overlay-btn.add-to-cart-btn-card.adding,
.overlay-btn.add-to-cart-btn-card.added {
  cursor: default;
}

.overlay-btn.add-to-cart-btn-card.adding {
  background-color: var(--secondary-color); 
  color: white;
}

.overlay-btn.add-to-cart-btn-card.added {
  background-color: var(--success-color, #28a745); /* Assuming --success-color is global */
  color: white;
}
.overlay-btn.add-to-cart-btn-card.added svg { 
  font-size: 1.4em; 
}


/* Mini Spinner for Add to Cart Button */
.mini-spinner {
  width: 20px; 
  height: 20px;
  border: 3px solid rgba(255, 255, 255, 0.3);
  border-top-color: #fff; 
  border-radius: 50%;
  animation: mini-spin 0.8s linear infinite; /* mini-spin keyframes should be in index.css or here if only local */
  display: inline-block; 
}

/* If mini-spin is only used here, define it here. Otherwise, define globally in index.css and remove from here. */
@keyframes mini-spin {
  to {
    transform: rotate(360deg);
  }
}

/* Optional: Direct Add to Cart Button (not in overlay) */
.direct-add-to-cart-btn {
  display: block;
  width: calc(100% - 40px); 
  margin: 15px 20px 20px; 
  padding: 10px 15px;
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 20px;
  font-weight: 500;
  font-size: 0.95rem;
  cursor: pointer;
  transition: background-color 0.3s ease, opacity 0.3s ease;
  text-align: center;
}
.direct-add-to-cart-btn:hover:not(:disabled) {
  background-color: var(--secondary-color);
}
.direct-add-to-cart-btn.adding {
  background-color: var(--secondary-color);
  opacity: 0.8;
  cursor: wait;
}
.direct-add-to-cart-btn.added {
  background-color: var(--success-color, #28a745); /* Assuming --success-color is global */
  opacity: 1;
  cursor: default;
}
.direct-add-to-cart-btn:disabled:not(.adding):not(.added) {
  background-color: #ccc;
  cursor: not-allowed;
}